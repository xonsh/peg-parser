name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 3
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13-dev"
    name: Test Python ${{ matrix.python-version }} ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "${{ matrix.python-version }}"
        cache: 'pip'
        cache-dependency-path: pyproject.toml
    - name: Install dependencies
      run: |
        pip --version
        pip install -U pip
        pip install -e ".[test]"
    - name: Test
      run: pytest --cov=peg_parser tests/ --cov-report=term-missing --cov-report=xml --junit-xml=test-results.xml
    - name: Surface failing tests
      if: always()
      uses: pmeier/pytest-results-action@main
      with:
        path: test-results.xml
#    - uses: codecov/codecov-action@v4.0.1
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        fail_ci_if_error: true
#        verbose: true

  benchmark:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
        cache-dependency-path: pyproject.toml
    - name: Install dependencies
      run: |
        pip --version
        pip install -U pip
        pip install -e ".[test]"
    - name: Run benchmark
      run: pytest tests/test_bench.py --benchmark-only --benchmark-json output.json
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: Python Benchmark
        tool: 'pytest'
        output-file-path: output.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        # Show alert with commit comment on detecting possible performance regression
        alert-threshold: '200%'
        comment-on-alert: true
        summary-always: true

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install hatch
    - name: Build and publish on PyPI
      env:
        HATCH_INDEX_USER: ${{ secrets.HATCH_INDEX_USER }}
        HATCH_INDEX_AUTH: ${{ secrets.HATCH_INDEX_AUTH }}
      run: |
        hatch build
        hatch publish
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        body: ${{ github.event.head_commit.message }}
        artifacts: dist/*.whl,dist/*.tar.gz
        token: ${{ secrets.GITHUB_TOKEN }}
